repositories {
    mavenCentral()
    jcenter()
    google()
}
buildscript {
    ext.kotlin_version = '1.1.61'
    ext.anko_version = '0.10.1'
    ext.google_services = '11.6.0'
    ext.google_support = '25.4.0'
    ext.okhttp = '3.7.0'
    ext.coroutines_version = '0.19.1'
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        cruncherEnabled = false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "motocitizen.main"
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['Motocitizen/src', 'Motocitizen/assets']
            resources.srcDirs = ['Motocitizen/src', 'Motocitizen/assets']
            aidl.srcDirs = ['Motocitizen/src', 'Motocitizen/assets']
            renderscript.srcDirs = ['Motocitizen/src', 'Motocitizen/assets']
            res.srcDirs = ['Motocitizen/res', 'Motocitizen/res/tablerows']
            assets.srcDirs = ['Motocitizen/assets']
        }
        instrumentTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

dependencies {
    compile project(':vksdk_library') //Зависимость от ВК API
    compile "com.google.android.gms:play-services-location:$google_services"
    compile "com.google.android.gms:play-services-maps:$google_services"
    compile "com.google.firebase:firebase-core:$google_services"
    compile "com.google.firebase:firebase-messaging:$google_services"

    compile "com.android.support:design:$google_support"
    compile "com.android.support:appcompat-v7:$google_support"
    compile 'com.android.support:multidex:1.0.2'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    compile "org.jetbrains.anko:anko:$anko_version"
    compile "org.jetbrains.anko:anko-commons:$anko_version"

    compile "com.squareup.okhttp3:okhttp:$okhttp"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp"

    compile 'com.karumi:dexter:4.1.0'
}
apply plugin: 'com.google.gms.google-services'
kotlin {
    experimental {
        coroutines "enable"
    }
}